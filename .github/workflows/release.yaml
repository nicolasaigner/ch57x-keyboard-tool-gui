name: Release

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  tag-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Extrair versão do Cargo.toml
        id: extract_version
        run: |
          VERSION=$(grep '^version =' gui/Cargo.toml | head -n1 | sed -E 's/.*"(.*)".*/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Criar tag com a versão
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag -a "v${{ steps.extract_version.outputs.version }}" -m "Release v${{ steps.extract_version.outputs.version }}"
          git push origin "v${{ steps.extract_version.outputs.version }}"

  create-release:
    needs: tag-release
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: taiki-e/create-gh-release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: tag-release
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Build GUI
        run: cargo build --release -p ch57x-keyboard-tool-gui --target ${{ matrix.target }}

      - name: Upload GUI binary
        uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ch57x-keyboard-tool-gui
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
          include: example-mapping.yaml
